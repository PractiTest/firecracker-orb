description: >
  This command will get all the configurations for firecracker run
    and execute it.
  Firecracker -is a tool to create Testset, Test and Steps in PractiTest
    from XML test results.
parameters:
  test_folder:
    type: string
    description: "folder that contains test results"
  firecracker_version:
    type: string
    description: "firecracker version to use"
  author_id:
    type: integer
    description: "user id who will run firecracker (should depend on api token that you use)"
  extra_params:
    type: string
    default: ""
    description: "in case you want to add extra params to json configuration"
  api_token:
    type: env_var_name
    default: FIRE_API_TOKEN
    description: "your PAT (personal api token) or your account's api token in Practitest"
  email:
    type: string
    description: "email of the user that will run firecracker"
  project_id:
    type: integer
    description: "project id that firecracker will direct the results to"
  api_uri:
    type: string
    default: "https://api.practitest.com"
    description: "in case you use eu server of practitest you will need to change it into https://eu1-prod.practitest.app"
  multitestset:
    type: boolean
    default: false
    description: "decide if firecracker will create multiple testset or single testset"
  test_case_as_pt_test_step:
    type: boolean
    default: true
    description: "decide if firecracker will use test-case as practitest steps or tests; true will group testcases into one test and each testcase will be a step"
  testset_name:
    type: string
    default: "FirecrackerTestSet"
    description: "in case of single testset creation choose the name for this testset name"
  additional_test_fields:
    type: string
    default: |
      \"custom-fields\":{},\"system-fields\":{}
    description: "add here test fields mapping"
  additional_testset_fields:
    type: string
    default: |
      \"custom-fields\":{},\"system-fields\":{}
    description: "add here testset field mapping"
  test_name:
    type: string
    default: |
      ?pt-test-name
    description: "map test name"
  step_name:
    type: string
    default: |
      ?pt-test-step-name
    description: "map step name"

steps:
  - run:
      name: prepare data and download firecracker for
      command: |
        echo "{\"api-token\":\"${<<parameters.api_token>>}\",\"email\":\"<<parameters.email>>\",\"project-id\":<<parameters.project_id>>,\"additional-test-fields\":{<<parameters.additional_test_fields>>},\"additional-testset-fields\":{<<parameters.additional_testset_fields>>},\"multitestset\":<<parameters.multitestset>>,\"test-case-as-pt-test-step\":<<parameters.test_case_as_pt_test_step>>,\"testset-name\":\"<<parameters.testset_name>>\",\"pt-test-name\":\"<<parameters.test_name>>\",\"pt-test-step-name\":\"<<parameters.step_name>>\"}" > config.json
        wget https://github.com/PractiTest/practitest-firecracker/releases/download/<<parameters.firecracker_version>>/practitest-firecracker-standalone.jar
        docker create -v /app --name firecracker adoptopenjdk:11-jre-hotspot
        docker cp "$(pwd)"/<<parameters.test_folder>> firecracker:/app
        docker cp "$(pwd)"/config.json firecracker:/app
        docker cp "$(pwd)"/practitest-firecracker-standalone.jar firecracker:/app
      when: always

  - run:
      name: start firecracker
      command: |
        docker run --volumes-from firecracker adoptopenjdk:11-jre-hotspot java --illegal-access=deny -jar /app/practitest-firecracker-standalone.jar --reports-path="app/<<parameters.test_folder>>" --api-uri=<<parameters.api_uri>> --author-id="<<parameters.author_id>>" --config-path="app/config.json" <<parameters.extra_params>> create-and-populate-testset
      when: always
